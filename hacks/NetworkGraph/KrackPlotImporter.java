/** * KrackPlotImporter.java * * (c) 2000 Wibi Internet */package com.wibinet.networks;import java.io.*;import java.util.*;public class KrackPlotImporter implements NetworkDataImporter{	public String getName()	{		return "KrackPlot";	}		public boolean acceptsFile(File f)	{		return(f.getName().toLowerCase().endsWith(".kp"));	}		public int getType()	{		return SINGLE_RELATION;	}		public VisualNetworkData readData(InputStream is) throws IOException	{		InputStreamReader isr = new InputStreamReader(is);		BufferedReader in = new BufferedReader(isr);				// read first line of data, get number of positions		String line = in.readLine();		StringTokenizer st = new StringTokenizer(line);		int nSize = Integer.parseInt(st.nextToken());				// create network		NetworkData nData0 = new NetworkData(nSize, true);		VisualNetworkData nData = new VisualNetworkData(nData0);				// try to read in actor labels and positions		boolean hasLabels = false;		boolean hasCoordinates = false;		int ai = 0;		line = in.readLine();		if(line.startsWith("!nc"))		{			if(!line.endsWith("!nl"))			{				hasLabels = true;				st = new StringTokenizer(line);				st.nextToken();				nData.setLabel(ai, st.nextToken());								// done with this line, move to next and increment				// actor index				ai++;				line = in.readLine();			}						// need to read next line now (this one probably was "!nc !nl")			line = in.readLine();		}		else		{			hasLabels = true;			hasCoordinates = true;		}				if(hasLabels || hasCoordinates)		{			for( ; ai<nSize; ai++)			{				st = new StringTokenizer(line);				if(hasCoordinates)				{					nData.setXPos(ai, Integer.parseInt(st.nextToken()));					nData.setYPos(ai, Integer.parseInt(st.nextToken()));				}				if(hasLabels)				{					nData.setLabel(ai, st.nextToken());					line = in.readLine();				}			}		}						// read in ties		for(int i=0; i<nSize; i++)		{			for(int j=0; j<nSize; j++)			{				nData.setTieStrength(i, j, (line.charAt(j) == '1') ? 1.0 : 0.0);			}			line = in.readLine();		}				return nData;	}}